function program = mainProgram()

addpath(genpath('P-Data'));
Problem={'adult','australian','balance','banknote',...
    'breast-cancer-wisconsin','ecoli','haberman','ionosphere','iris'....
    'liver','page-blocks','pima_diabetec','segment','sonar','statimag',...
    'teaching','thyroid','vehicle','vowel','wdbc','wine','DNA',...
    'fertility','heart','letter-recognition','hepatitis','bupa',...
    'transfusion','zoo','hayes-roth'};




% Problem = {'wine'};

%% Model SETTINGS
params.numOfRuns = 10;
params.numOfFolds = 10;                   % Create CROSS VALIDATION FOLDS

params.classifiers = {'KNN' 'DISCR''SVM'};
params.trainFunctionANN={'trainlm','trainbfg','trainrp','trainscg','traincgb','traincgf','traincgp','trainoss','traingdx'};
params.trainFunctionDiscriminant = {'pseudoLinear','pseudoQuadratic'};
params.kernelFunctionSVM={'gaussian','polynomial','linear'};

%% MAIN LOOP
parfor i = 1:length(Problem)
    for eachClass = 2:10
        nonOptimized_Accuracy = [];
        optimized_Accuracy = [];
        for runs = 1:params.numOfRuns
            p_name = Problem{i};
            results = runTraining(p_name, params, eachClass);
            results.p_name = p_name;
            nonOptimized_Accuracy(runs) = results.nonOptimized_Accuracy;
            optimized_Accuracy(runs) = results.optimized_Accuracy;
        end
        results.nonOptimized_Accuracy = mean(nonOptimized_Accuracy);
        results.optimized_Accuracy = mean(optimized_Accuracy);
        results.nonOptimized_stdDEV = std(nonOptimized_Accuracy);
        results.optimized_stdDEV = std(optimized_Accuracy);
        results.eachClass = eachClass;
        saveResults(results);
    end
end
end

